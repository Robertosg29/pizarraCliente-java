
package GUI;

import Controlador.Controlador;
import data.Brochas;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Rober
 */
public class PPal extends javax.swing.JPanel {

    Controlador c;
    Ppizarra pizarra;
    BufferedImage bf;
    public PPal(Controlador c) {
        this.c=c;
        initComponents();
        minitComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBotones = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bColor = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comboGrosor = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboBrochas = new javax.swing.JComboBox<>();
        eCabecera = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        panelBotones.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 100, 1));
        panelBotones.setLayout(new java.awt.GridLayout(6, 0, 0, 10));

        jLabel1.setText("Elige un color :");
        jLabel1.setPreferredSize(new java.awt.Dimension(78, 8));
        panelBotones.add(jLabel1);

        bColor.setText("Colores");
        bColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bColorActionPerformed(evt);
            }
        });
        panelBotones.add(bColor);

        jLabel2.setText("Elige un grosor:");
        panelBotones.add(jLabel2);

        comboGrosor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboGrosor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "6", "8", "10", "12", "14", "16", "18", "20", "24", "40" }));
        comboGrosor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGrosorActionPerformed(evt);
            }
        });
        panelBotones.add(comboGrosor);

        jLabel3.setText("Elige un lápiz:");
        panelBotones.add(jLabel3);

        comboBrochas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboBrochas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBrochasActionPerformed(evt);
            }
        });
        panelBotones.add(comboBrochas);

        add(panelBotones, java.awt.BorderLayout.EAST);

        eCabecera.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        eCabecera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eCabecera.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add(eCabecera, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    private void bColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bColorActionPerformed
        Color color;
        JColorChooser elegirColor=new JColorChooser();
        color=elegirColor.showDialog(this,"Seleccione un color", Color.WHITE);
        pizarra.setColor(color);
    }//GEN-LAST:event_bColorActionPerformed

    private void comboGrosorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGrosorActionPerformed
        int grosor;
        grosor=Integer.parseInt((String)comboGrosor.getSelectedItem());
        pizarra.setGrosorLapiz(grosor);
    }//GEN-LAST:event_comboGrosorActionPerformed

    private void comboBrochasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBrochasActionPerformed
        Brochas b;
        b=(Brochas)comboBrochas.getSelectedItem();
        if(b==Brochas.BORRADOR){
            pizarra.setColor(pizarra.getBackground());
            bColor.setEnabled(false);
        }else{
            pizarra.setColor(Color.WHITE);
            bColor.setEnabled(true);
        }
        pizarra.setB(b);
    }//GEN-LAST:event_comboBrochasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bColor;
    private javax.swing.JComboBox<Brochas> comboBrochas;
    private javax.swing.JComboBox<String> comboGrosor;
    private javax.swing.JLabel eCabecera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel panelBotones;
    // End of variables declaration//GEN-END:variables

    private void minitComponents() {
        JPanel pBasepizarra=new JPanel();
        
        //ESTE ROLLO ES PARA DARLE UN BORDE Y QUE NO SE VEA CUANDO PINTAS, PARA ELLO AÑADIMOS UN PANEL BASE AL QUE PONEMOS EL BORDE
        //LO COLOCAMOS EN EL CENTRO Y DESPUES LE AÑADIMOS LA PIZARRA
        pBasepizarra.setLayout(new GridLayout());
        this.add(pBasepizarra,BorderLayout.CENTER);
        pBasepizarra.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(102, 102, 0)));
        
        pizarra=new Ppizarra(c);
        //Utilizamos un bufferimagen como base para pintar para poder mantener los dibujos cuando se minimice la pantalla
        //AQUI LE DAMOS el tamaño de la pizarra(uno de los paneles,donde se pinta),le damos un color de fondo y pintamos un cuadrado que ocupa
        //toda la imagen
        bf=new BufferedImage(pizarra.getWidth(),pizarra.getHeight(),BufferedImage.TYPE_INT_RGB);
        Graphics g=bf.getGraphics();
        g.setColor(pizarra.getBackground());
        g.fillRect(0,0,pizarra.getWidth(),pizarra.getHeight());
        pizarra.setBf(bf);
        pizarra.repaint();
        
        
        pBasepizarra.add(pizarra);
        
        //asignamos los valores del enumerado al combo
        Brochas[] bro = Brochas.values();
        for (Brochas b: bro) {
        comboBrochas.addItem(b);
}
    }

    void pintar(int x, int y, Color co, int grosor,Image img) {
        
        Graphics g=bf.getGraphics();

        if(img==null){
            g.setColor(co);
            g.fillOval(x, y, grosor, grosor);
        }else{
            g.drawImage(img, x, y, grosor,grosor, null);
        }
        pizarra.setBf(bf);
        pizarra.repaint();
        c.getV().revalidate();
    }

    public JLabel geteCabecera() {
        return eCabecera;
    }
    
}
